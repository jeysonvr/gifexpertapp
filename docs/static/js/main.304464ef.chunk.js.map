{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","defaultProps","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAe,MAMnB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,aA4BhCZ,EAAYe,aAAe,GAIZf,Q,+BCxCFgB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,gDAEmCC,UAAWH,GAF9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCaLO,EAXK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAG7B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCoBFO,EAtBC,SAAC,GAAkB,IAAD,ECHN,SAAEnB,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAGCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAO1B,CAACpB,IAGGqB,EDpB0BK,CAFH,EAAf1B,UAEFa,EAFiB,EAEtBN,KAAaa,EAFS,EAETA,QAGrB,OAFAO,QAAQC,IAAIf,EAAQO,GAGhB,qCACMA,GAAW,mBAAGJ,UAAU,wCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEiB3BkB,EA9BM,WAAO,IAAD,EACa5C,mBAAS,CAAC,cADvB,mBAChB6C,EADgB,KACJ9C,EADI,KAQvB,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ8C,EAAWrB,KAAK,SAACT,EAAU+B,GAAX,OACZ,cAAC,EAAD,CAEI/B,SAAWA,GADLA,Y,MCnBlCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.304464ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories((cats) => [inputValue,...cats]);\r\n            setinputValue( '' );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nAddCategory.defaultProps = {\r\n\r\n}\r\n\r\nexport default AddCategory\r\n\r\n\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=lEb3Q8VAMchDtXItl4AA1AsaXEz8CmTT`;\r\n\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import React, { useState, useEffect } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n    console.log(images, loading);\r\n\r\n    return (\r\n        <>\r\n            { loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                    { \r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={ img.id }    \r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs (category)\r\n            .then( imgs => {\r\n\r\n                // setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n                // }, 3000);\r\n\r\n            });\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One punch']);\r\n    \r\n    // const handleAdd = () => {\r\n    //     setCategories( (cats) => [...cats, 'Hunter']);\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( (category, i) => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}